Sector_C = deficit_sector_C,
Sector_D = deficit_sector_D,
Deficit_Total = deficit_total)
# Convertir los datos de los sectores a formato largo
datos_largos <- tidyr::pivot_longer(datos, cols = -c(Trimestre, Deficit_Total), names_to = "Sector", values_to = "Deficit")
# Graficar los déficits por sector y el déficit total
grafico <- ggplot() +
geom_bar(data = datos_largos, aes(x = Trimestre, y = Deficit, fill = Sector), stat = "identity", position = "stack", width = 0.6) +
geom_line(data = datos, aes(x = Trimestre, y = Deficit_Total, group = 1), color = "blue", size = 1) +
labs(x = "Trimestre", y = "Déficit en cuenta corriente (% del PIB)") +
ggtitle("Déficit en cuenta corriente por sector intraindustrial") +
scale_fill_manual(values = c("Sector A" = "red", "Sector B" = "green", "Sector C" = "blue", "Sector D" = "orange")) +
theme_minimal()
# Mostrar el gráfico
print(grafico)
# Crear un dataframe con los datos de los trimestres y los déficits por sector
trimestres <- c("T1", "T2", "T3", "T4")  # Reemplaza con tus trimestres reales
deficit_sector_A <- c(1.2, 1.8, -1.5, -1.3)  # Reemplaza con los déficits del sector A reales
deficit_sector_B <- c(-0.9, -1.2, 1.0, 1.5)  # Reemplaza con los déficits del sector B reales
deficit_sector_C <- c(-0.5, 0.8, -1.2, 1.1)  # Reemplaza con los déficits del sector C reales
deficit_sector_D <- c(0.6, -0.7, 1.3, -0.9)  # Reemplaza con los déficits del sector D reales
deficit_total <- c(3.0, 3.5, 3.2, 3.8)  # Reemplaza con los déficits totales reales
datos <- data.frame(Trimestre = trimestres,
Sector_A = deficit_sector_A,
Sector_B = deficit_sector_B,
Sector_C = deficit_sector_C,
Sector_D = deficit_sector_D,
Deficit_Total = deficit_total)
# Convertir los datos de los sectores a formato largo
datos_largos <- tidyr::pivot_longer(datos, cols = -c(Trimestre, Deficit_Total), names_to = "Sector", values_to = "Deficit")
# Graficar los déficits por sector y el déficit total
grafico <- ggplot(datos_largos, aes(x = Trimestre, y = Deficit, fill = Sector)) +
geom_bar(stat = "identity", position = "dodge", width = 0.6) +
geom_line(data = datos, aes(x = Trimestre, y = Deficit_Total, group = 1), color = "blue", size = 1) +
labs(x = "Trimestre", y = "Déficit en cuenta corriente (% del PIB)") +
ggtitle("Déficit en cuenta corriente por sector intraindustrial") +
scale_fill_manual(values = c("Sector A" = "red", "Sector B" = "green", "Sector C" = "blue", "Sector D" = "orange")) +
theme_minimal()
# Mostrar el gráfico
print(grafico)
# Crear un dataframe con los datos de los trimestres y los déficits por sector
trimestres <- c("T1", "T2", "T3", "T4")  # Reemplaza con tus trimestres reales
deficit_sector_A <- c(1.2, 1.8, -1.5, -1.3)  # Reemplaza con los déficits del sector A reales
deficit_sector_B <- c(-0.9, -1.2, 1.0, 1.5)  # Reemplaza con los déficits del sector B reales
deficit_sector_C <- c(-0.5, 0.8, -1.2, 1.1)  # Reemplaza con los déficits del sector C reales
deficit_sector_D <- c(0.6, -0.7, 1.3, -0.9)  # Reemplaza con los déficits del sector D reales
deficit_total <- c(3.0, 3.5, 3.2, 3.8)  # Reemplaza con los déficits totales reales
datos <- data.frame(Trimestre = trimestres,
Sector_A = deficit_sector_A,
Sector_B = deficit_sector_B,
Sector_C = deficit_sector_C,
Sector_D = deficit_sector_D,
Deficit_Total = deficit_total)
# Convertir los datos de los sectores a formato largo
datos_largos <- tidyr::pivot_longer(datos, cols = -c(Trimestre, Deficit_Total), names_to = "Sector", values_to = "Deficit")
# Graficar los déficits por sector y el déficit total
grafico <- ggplot() +
geom_bar(data = datos_largos, aes(x = Trimestre, y = Deficit, fill = Sector), stat = "identity", position = "dodge", width = 0.6) +
geom_line(data = datos, aes(x = Trimestre, y = Deficit_Total, group = 1), color = "blue", size = 1) +
labs(x = "Trimestre", y = "Déficit en cuenta corriente (% del PIB)") +
ggtitle("Déficit en cuenta corriente por sector intraindustrial") +
scale_fill_manual(values = c("Sector A" = "red", "Sector B" = "green", "Sector C" = "blue", "Sector D" = "orange")) +
theme_minimal()
# Mostrar el gráfico
print(grafico)
setwd("C:\Users\david\OneDrive - unicolmayor.edu.co\UCMC\OCTAVO SEMESTRE\RIESGOS FINANCIEROS")
setwd("C:/Users/david/OneDrive - unicolmayor.edu.co/UCMC/OCTAVO SEMESTRE/RIESGOS FINANCIEROS")
getwd()
data_amz=read.csv("AMZN.csv", header="TRUE")
data_amz=read.csv("AMZN.csv", header=TRUE)
.
data_amzn=read.csv("AMZN.csv", header=TRUE)
head(data_amzn)
str(data_amzn)
head(data_amzn)
fecha = as.Date(data_amzn$Date, format="%y-%m-%d")
str(fecha)
setwd("C:/Users/david/OneDrive - unicolmayor.edu.co/UCMC/OCTAVO SEMESTRE/RIESGOS FINANCIEROS")
getwd()
data_amzn=read.csv("AMZN.csv", header=TRUE)
head(data_amzn)
str(data_amzn) ##estructura de los datos = str
fecha = as.Date(data_amzn$Date, format="%Y-%m-%d")
str(fecha)
data_amzn[ , -1]
install.packages(c("xts", "quantmod"))
data_amzn2 = cbind(fecha, data_amzn[, -1])
head(data_amzn2)
str(data_amzn2)
library(xts)
library(quantmod)
data_amzn3=xts(data_amzn2[, 2:7], order.by = data_amzn2[, 1])
head(data_amzn3)
str(data_amzn3)
class(data_amzn3)
names(data_amzn_3) = c("AMZN.Open", "AMZN.High", "AMZN.Low",
"AMZN.Close", "AMZN.Adjusted", "AMZN.Volume")
names(data_amzn3) = c("AMZN.Open", "AMZN.High", "AMZN.Low",
"AMZN.Close", "AMZN.Adjusted", "AMZN.Volume")
head(data_amzn3[, 2:5])
data_amzn4=cbind(data_amzn3[, 1:4], data_amzn3[, 6], data_amzn3[, 5])
head(data_amzn4)
####
library(quantmod)
to = "2020-01-01", auto.assign = FALSE
data_amzn5=getSymbols("AMZN",
from ="2014-12-31",
to = "2020-01-01", auto.assign = FALSE)
head(data_amzn5)
class(data_amzn5)
plot(data_amzn5)
plot(data_amzn5$AMZN.Close)
plot(data_amzn5$AMZN.Close,
main="Amazon Inc")
dim(data_amzn5)
##los dias de transacción son 252 al año
summary(data_amzn5)
##los dias de transacción son 252 al año
summary(data_amzn5$AMZN.Close)
##Manipulación de datos
data_amzn5[1, ]
data_amzn5[5:8, ]
data_amzn5[c(1,4,5), ]
data_amzn5[c(1,4,nrows(data_amzn5))]
data_amzn5[c(1,4,nrows(data_amzn5)), ]
data_amzn5[c(1,4, nrows(data_amzn5) )]
data_amzn5[c(1,4, nrow(data_amzn5))]
head(data_amzn5[, 4])
head(data_amzn5[ , c(1,4,7))
head(data_amzn5[ , c(1,4,6))
head(data_amzn5[ , c(1,4,6)])
###imprimir en pantalla los últimos 6 datos de las columnas 2, 3 y 4
tail(data_amzn5[, c(2,3,4)], 6)
###imprimir en pantalla los últimos 6 datos de las columnas 2, 3 y 4
tail(data_amzn5[, c(2,3,4)])
data_amzn5[1254:1259, 2:4]
##subconjuntos
amzn_2018=data_amzn5("2018-01-01/2019-01-01")
##subconjuntos
amzn_2018=data_amzn5["2018-01-01/2019-01-01"]
head(amzn_2018)
tail(amzn_2018)
index(amzn_2018)
amzn_2018=subset(data_amzn5,
index(data_amzn5) >="2018-01-01" &
index(data_amzn5) >"2019-01-01")
##subconjuntos
amzn_2018=data_amzn5["2018-01-01/2019-01-01"]
head(amzn_2018)
tail(amzn_2018)
index(amzn_2018)
amzn_2018b=subset(data_amzn5,
index(data_amzn5) >="2018-01-01" &
index(data_amzn5) >"2019-01-01")
head(amzn_2018b)
tail(amzn_2018b)
amzn_close_mayor100=subset(data_amzn5, data_amzn5$AMZN.Close>=100)
amzn_close_mayor100
dim(amzn_close_mayor100)
amzn_close50_vol54671000=subset(data_amzn5, data_amzn5$AMZN.Close<=50 &
data_amzn5$AMZN.Volume<=54671000)
dim(amzn_close50_vol54671000)
to.weekly(wk)
no=data_amzn5
###cambio de frecuencias
wk=data_amzn5
to.weekly(wk)
no=data_amzn5
to.monthly(no)
?to.monthly
###gráficas de precios normalizados
head(data_amzn5$AMZN.Close)
norm_price_amzn=data_amzn5$AMZN.Close
head(norm_price_amzn)
data_amzn5$AMZN.Close[1, ]
as.numeric(data_amzn5$AMZN.Close[1, ])
primwr_valor=as.numeric(data_amzn5$AMZN.Close[1, ])
primer_valor=as.numeric(data_amzn5$AMZN.Close[1, ])
norm_price_amzn=data_amzn5$AMZN.Close / primer_valor
head(norm_price_amzn)
tail(norm_price_amzn)
plot(norm_price_amzn)
###Varios activos: AMZ, GOOG, AAPL, SPY
data_amzn = getSymbols("AMZN",
from = "2014-12-31",
to = "2020-01-01", auto.assign = FALSE)
data_goog = getSymbols("GOOG",
from = "2014-12-31",
to = "2020-01-01", auto.assign = FALSE)
data_aapl = getSymbols("AAPL",
from = "2014-12-31",
to = "2020-01-01", auto.assign = FALSE)
data_spy = getSymbols("SPY",
data_spy = getSymbols("SPY",
from = "2014-12-31",
to = "2020-01-01", auto.assign = FALSE)
data_spy = getSymbols("SPY",
ata_spy = getSymbols("SPY",
from = "2014-12-31",
to = "2020-01-01", auto.assign = FALSE)
data_spy = getSymbols("SPY",
from = "2014-12-31",
to = "2020-01-01", auto.assign = FALSE)
close_data=cbind(data_amzn$AMZN.Close, data_goog$GOOG.Close,
data_aapl$AAPL.Close, data_spy$SPY.Close)
head(close_data)
normaliced_price=close_data
normaliced_price$AMZN.Close=(close_data$AMZN.Close/as.numeric[1,1])
normaliced_price$AMZN.Close=close_data$AMZN.Close/as.numeric(normaliced_price[1,1])
normaliced_price$GOOG.Close=close_data$GOOG.Close/as.numeric(normaliced_price[1,1])
normaliced_price$AAPL.Close=close_data$AAPL.Close/as.numeric(normaliced_price[1,1])
normaliced_price$SPY.Close=close_data$SPY.Close/as.numeric(normaliced_price[1,1])
head(normaliced_price)
normaliced_price=close_data
normaliced_price$AMZN.Close=close_data$AMZN.Close/as.numeric(normaliced_price[1,1])
normaliced_price$GOOG.Close=close_data$GOOG.Close/as.numeric(normaliced_price[1,1])
normaliced_price$AAPL.Close=close_data$AAPL.Close/as.numeric(normaliced_price[1,1])
normaliced_price$SPY.Close=close_data$SPY.Close/as.numeric(normaliced_price[1,1])
head(normaliced_price)
normaliced_price$AMZN.Close=close_data$AMZN.Close/as.numeric(normaliced_price[1,1])
normaliced_price$GOOG.Close=close_data$GOOG.Close/as.numeric(normaliced_price[1,2])
normaliced_price$AAPL.Close=close_data$AAPL.Close/as.numeric(normaliced_price[1,3])
normaliced_price$SPY.Close=close_data$SPY.Close/as.numeric(normaliced_price[1,4])
head(normaliced_price)
plot(x=tiempo,
y=normaliced_price$AMZN.Close,
xlab="Fecha",
ylab="Comportamiento inversión",
type="l",
mian="Valor de una inversión")
tiempo=index(normaliced_price)
plot(x=tiempo,
y=normaliced_price$AMZN.Close,
xlab="Fecha",
ylab="Comportamiento inversión",
type="l",
mian="Valor de una inversión")
normaliced_price$AMZN.Close=close_data$AMZN.Close/as.numeric(normaliced_price[1,1])
normaliced_price$GOOG.Close=close_data$GOOG.Close/as.numeric(normaliced_price[1,2])
normaliced_price$AAPL.Close=close_data$AAPL.Close/as.numeric(normaliced_price[1,3])
normaliced_price$SPY.Close=close_data$SPY.Close/as.numeric(normaliced_price[1,4])
head(normaliced_price)
normaliced_price$AMZN.Close=close_data$AMZN.Close/as.numeric(normaliced_price[1,1])
normaliced_price$GOOG.Close=close_data$GOOG.Close/as.numeric(normaliced_price[1,2])
normaliced_price$AAPL.Close=close_data$AAPL.Close/as.numeric(normaliced_price[1,3])
normaliced_price$SPY.Close=close_data$SPY.Close/as.numeric(normaliced_price[1,4])
head(normaliced_price)
normaliced_price$AMZN.Close=close_data$AMZN.Close/as.numeric(normaliced_price[1,1])
normaliced_price$GOOG.Close=close_data$GOOG.Close/as.numeric(normaliced_price[1,2])
normaliced_price$AAPL.Close=close_data$AAPL.Close/as.numeric(normaliced_price[1,3])
normaliced_price$SPY.Close=close_data$SPY.Close/as.numeric(normaliced_price[1,4])
head(normaliced_price)
close_data=cbind(data_amzn$AMZN.Close, data_goog$GOOG.Close,
data_aapl$AAPL.Close, data_spy$SPY.Close)
close_data=cbind(data_amzn$AMZN.Close, data_goog$GOOG.Close,
data_aapl$AAPL.Close, data_spy$SPY.Close)
head(close_data)
normaliced_price=close_data
normaliced_price$AMZN.Close=close_data$AMZN.Close/as.numeric(normaliced_price[1,1])
normaliced_price$GOOG.Close=close_data$GOOG.Close/as.numeric(normaliced_price[1,2])
normaliced_price$AAPL.Close=close_data$AAPL.Close/as.numeric(normaliced_price[1,3])
normaliced_price$SPY.Close=close_data$SPY.Close/as.numeric(normaliced_price[1,4])
head(normaliced_price)
tiempo=index(normaliced_price)
plot(x=tiempo,
y=normaliced_price$AMZN.Close,
xlab="Fecha",
ylab="Comportamiento inversión",
type="l",
mian="Valor de una inversión de $1")
plot(x=tiempo,
y=normaliced_price$AMZN.Close,
xlab="Fecha",
ylab="Comportamiento inversión",
type="l",
mian="Valor de una inversión de $1"
)
plot(x=tiempo,
y=normaliced_price$AMZN.Close,
xlab="Fecha",
ylab="Comportamiento inversión",
type='l',
main="Valor de una inversión de $1"
)
plot(x=tiempo,
y=normaliced_price$AMZN.Close,
xlab="Fecha",
ylab="Comportamiento inversión",
type='l',
main="Valor de una inversión de $1"
)
plot(x=tiempo,
y=normaliced_price$AMZN.Close,
xlab="Fecha",
ylab="Comportamiento inversión",
type='l',
main="Valor de una inversión de $1"
)
lines(x=tiempo, y=normaliced_price$GOOG.Close, col="blue")
lines(x=tiempo, y=normaliced_price$AAPL.Close, col="red")
lines(x=tiempo, y=normaliced_price$SPY.Close, col="darkgreen")
grid(col = "gray")
legend("topleft",
c("AMZN", "GOOG", "AAPL", "SPY"),
col = c("black", "blue", "red", "darkgreen"))
legend("topleft",
c("AMZN", "GOOG", "AAPL", "SPY"),
lwd = c(1, 1, 1, 1)
col = c("black", "blue", "red", "darkgreen"))
legend("topleft",
c("AMZN", "GOOG", "AAPL", "SPY"),
lwd = c(1, 1, 1, 1),
col = c("black", "blue", "red", "darkgreen"))
plot(x=tiempo,
y=normaliced_price$AMZN.Close,
xlab="Fecha",
ylab="Comportamiento inversión",
type='l',
main="Valor de una inversión de $1"
)
lines(x=tiempo, y=normaliced_price$GOOG.Close, col="blue")
lines(x=tiempo, y=normaliced_price$AAPL.Close, col="red")
lines(x=tiempo, y=normaliced_price$SPY.Close, col="darkgreen")
grid(col = "gray")
legend("topleft",
c("AMZN", "GOOG", "AAPL", "SPY"),
lwd = c(1, 1, 1, 1),
col = c("black", "blue", "red", "darkgreen"))
legend("topleft",
c("AMZN", "GOOG", "AAPL", "SPY"),
lwd = c(1, 1, 1, 1),
col = c("black", "blue", "red", "darkgreen"))
plot(x=tiempo,
y=normaliced_price$AMZN.Close,
xlab="Fecha",
ylab="Comportamiento inversión",
type='l',
main="Valor de una inversión de $1"
)
lines(x=tiempo, y=normaliced_price$GOOG.Close, col="blue")
lines(x=tiempo, y=normaliced_price$AAPL.Close, col="red")
lines(x=tiempo, y=normaliced_price$SPY.Close, col="darkgreen")
grid(col = "gray")
legend("topleft",
c("AMZN", "GOOG", "AAPL", "SPY"),
lwd = c(1, 1, 1, 1),
col = c("black", "blue", "red", "darkgreen"))
####Velas Japonesas
ohlc = to.monthly(data_amzn)
head(ohlc)
ohlc=[-1, -6]
ohlc=ohlc[-1, -6]
amzn_ohlc=as.quantmod.OHLC(ohlc, col.names = c("Open", "High", "Low",
"Close", "Volume"))
chart_Series(amzn_ohlc)
amzn_ohlc=as.quantmod.OHLC(ohlc, col.names = c("Open", "High", "Low",
"Close", "Volume"))
amzn_ohlc=as.quantmod.OHLC(ohlc, col.names = c("Open", "High", "Low",
"Close", "Volume"))
amzn_ohlc=as.quantmod.OHLC(ohlc, col.names = c("Open", "High", "Low",
"Close", "Volume"))
"Close", "Volume")
amzn_ohlc=as.quantmod.OHLC(ohlc, col.names = c("Open", "High", "Low",
"Close", "Volume"))
####Velas Japonesas
ohlc = to.monthly(data_amzn)
head(ohlc)
ohlc=ohlc[-1, -6]
amzn_ohlc=as.quantmod.OHLC(ohlc, col.names = c("Open", "High", "Low",
"Close", "Volume"))
chart_Series(amzn_ohlc,
theme = "white")
chartSeries(amzn_ohlc,
theme = "white")
source("C:/Users/david/OneDrive - unicolmayor.edu.co/UCMC/OCTAVO SEMESTRE/RIESGOS FINANCIEROS/Clase 1 - Precio normalizado.R")
data_uber = getSymbols("UBER",
from = "2018-12-31",
to = "2023-01-01", auto.assign = FALSE)
data_nflx = getSymbols("NFLX",
from = "2018-12-31",
to = "2023-01-01", auto.assign = FALSE)
data_cvna = getSymbols("CVNA",
from = "2018-12-31",
to = "2023-01-01", auto.assign = FALSE)
data_aal = getSymbols("AAL",
from = "2018-12-31",
to = "2023-01-01", auto.assign = FALSE)
close_data=cbind(data_uber$UBER.Close, data_nflx$NFLX.Close,
data_cvna$CVNA.Close, data_aal$AAL.Close)
head(close_data)
close_data=cbind(data_uber$UBER.Close, data_nflx$NFLX.Close,
data_cvna$CVNA.Close, data_aal$AAL.Close)
head(close_data)
data_dal = getSymbols("DAL",
from = "2018-12-31",
to = "2023-01-01", auto.assign = FALSE)
close_data=cbind(data_dal$DAL.Close, data_nflx$NFLX.Close,
data_cvna$CVNA.Close, data_aal$AAL.Close)
head(close_data)
normaliced_price$DAL.Close=close_data$DAL.Close/as.numeric(normaliced_price[1,1])
normaliced_price$CVNA.Close=close_data$CVNA.Close/as.numeric(normaliced_price[1,2])
normaliced_price$AAL.Close=close_data$AAL.Close/as.numeric(normaliced_price[1,3])
normaliced_price$DAL.Close=close_data$DAL.Close/as.numeric(normaliced_price[1,1])
close_data=cbind(data_dal$DAL.Close, data_nflx$NFLX.Close,
data_cvna$CVNA.Close, data_aal$AAL.Close)
head(close_data)
normaliced_price=close_data
normaliced_price$DAL.Close=close_data$DAL.Close/as.numeric(normaliced_price[1,1])
normaliced_price$NFLX.Close=close_data$NFLX.Close/as.numeric(normaliced_price[1,2])
normaliced_price$CVNA.Close=close_data$CVNA.Close/as.numeric(normaliced_price[1,3])
normaliced_price$AAL.Close=close_data$AAL.Close/as.numeric(normaliced_price[1,4])
head(normaliced_price)
tiempo=index(normaliced_price)
plot(x=tiempo,
y=normaliced_price$DAL.Close,
xlab="Fecha",
ylab="Comportamiento inversión",
type='l',
main="David Felipe Zabala Castañeda"
)
lines(x=tiempo, y=normaliced_price$NFLX.Close, col="blue")
lines(x=tiempo, y=normaliced_price$CVNA.Close, col="red")
lines(x=tiempo, y=normaliced_price$AAL.Close, col="darkgreen")
plot(x=tiempo,
y=normaliced_price$DAL.Close,
ylim = c(0, 1.5)
xlab="Fecha",
plot(x=tiempo,
y=normaliced_price$DAL.Close,
ylim = c(0, 1.5),
xlab="Fecha",
ylab="Comportamiento inversión",
type='l',
main="David Felipe Zabala Castañeda"
)
lines(x=tiempo, y=normaliced_price$NFLX.Close, col="blue")
lines(x=tiempo, y=normaliced_price$CVNA.Close, col="red")
lines(x=tiempo, y=normaliced_price$AAL.Close, col="darkgreen")
plot(x=tiempo,
y=normaliced_price$DAL.Close,
ylim = c(0, 2.5),
xlab="Fecha",
ylab="Comportamiento inversión",
type='l',
main="David Felipe Zabala Castañeda"
)
lines(x=tiempo, y=normaliced_price$NFLX.Close, col="blue")
lines(x=tiempo, y=normaliced_price$CVNA.Close, col="red")
lines(x=tiempo, y=normaliced_price$AAL.Close, col="darkgreen")
plot(x=tiempo,
y=normaliced_price$DAL.Close,
ylim = c(0, 3.5),
xlab="Fecha",
ylab="Comportamiento inversión",
type='l',
main="David Felipe Zabala Castañeda"
)
lines(x=tiempo, y=normaliced_price$NFLX.Close, col="blue")
lines(x=tiempo, y=normaliced_price$CVNA.Close, col="red")
lines(x=tiempo, y=normaliced_price$AAL.Close, col="darkgreen")
plot(x=tiempo,
y=normaliced_price$DAL.Close,
ylim = c(0, 5.5),
xlab="Fecha",
ylab="Comportamiento inversión",
type='l',
main="David Felipe Zabala Castañeda"
)
lines(x=tiempo, y=normaliced_price$NFLX.Close, col="blue")
lines(x=tiempo, y=normaliced_price$CVNA.Close, col="red")
lines(x=tiempo, y=normaliced_price$AAL.Close, col="darkgreen")
plot(x=tiempo,
y=normaliced_price$DAL.Close,
ylim = c(0, 7.5),
xlab="Fecha",
ylab="Comportamiento inversión",
type='l',
main="David Felipe Zabala Castañeda"
)
lines(x=tiempo, y=normaliced_price$NFLX.Close, col="blue")
lines(x=tiempo, y=normaliced_price$CVNA.Close, col="red")
lines(x=tiempo, y=normaliced_price$AAL.Close, col="darkgreen")
plot(x=tiempo,
y=normaliced_price$DAL.Close,
ylim = c(0, 9.5),
xlab="Fecha",
ylab="Comportamiento inversión",
type='l',
main="David Felipe Zabala Castañeda"
)
lines(x=tiempo, y=normaliced_price$NFLX.Close, col="blue")
lines(x=tiempo, y=normaliced_price$CVNA.Close, col="red")
lines(x=tiempo, y=normaliced_price$AAL.Close, col="darkgreen")
plot(x=tiempo,
y=normaliced_price$DAL.Close,
ylim = c(0, 11.5),
xlab="Fecha",
ylab="Comportamiento inversión",
type='l',
main="David Felipe Zabala Castañeda"
)
lines(x=tiempo, y=normaliced_price$NFLX.Close, col="blue")
lines(x=tiempo, y=normaliced_price$CVNA.Close, col="red")
lines(x=tiempo, y=normaliced_price$AAL.Close, col="darkgreen")
lines(x=tiempo, y=normaliced_price$NFLX.Close, col="blue")
lines(x=tiempo, y=normaliced_price$CVNA.Close, col="red")
lines(x=tiempo, y=normaliced_price$AAL.Close, col="darkgreen")
grid(col = "gray")
legend("topleft",
c("DLA", "NFLX", "CVNA", "AAL"),
lwd = c(1, 1, 1, 1),
col = c("black", "blue", "red", "darkgreen"))
